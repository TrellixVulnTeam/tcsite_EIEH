# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-17 21:10
from __future__ import unicode_literals

import adminsortable.fields
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(max_length=140, verbose_name='Тэги через "," без пробелов')),
            ],
            options={
                'verbose_name_plural': 'Тэги для подменю',
                'verbose_name': 'Тэги для подменю',
            },
        ),
        migrations.CreateModel(
            name='BlogMetaTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=70, verbose_name='Заголовок страницы (тэг <title>, до 70 символов)')),
                ('keywords', models.CharField(blank=True, max_length=210, verbose_name='Ключевые слова через запятую (тэг <keywords>, до 210 символов)')),
            ],
            options={
                'verbose_name_plural': 'МетаТэги',
                'verbose_name': 'МетаТэги',
            },
        ),
        migrations.CreateModel(
            name='Bottom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(blank=True, verbose_name='Текст')),
                ('video', models.CharField(blank=True, max_length=14, verbose_name='Видео ID(youtube)')),
                ('image', models.ImageField(blank=True, upload_to='blog/block', verbose_name='Картинка')),
                ('b_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Нижние блоки, которые под каруселью',
                'verbose_name': 'Нижний блок',
                'ordering': ['b_order'],
            },
        ),
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='blog/instance/carousel')),
                ('i_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Картинки для карусели 1000 на 600',
                'verbose_name': 'Картинка 1000 на 600',
                'ordering': ['i_order'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_image', models.ImageField(upload_to='blog/top_image', verbose_name='Заставка')),
                ('title', models.CharField(max_length=49, verbose_name='Заголовок заставки')),
                ('slogan', models.CharField(blank=True, max_length=140, verbose_name='Девиз')),
                ('txt', models.TextField(blank=True, verbose_name='Предварительный текст')),
                ('tags', models.CharField(blank=True, max_length=140, verbose_name='Тэги через "," без пробелов')),
                ('meta_title', models.CharField(blank=True, max_length=70, verbose_name='Заголовок страницы (тэг <title>, до 70 символов)')),
                ('meta_keywords', models.CharField(blank=True, max_length=210, verbose_name='Ключевые слова через запятую (тэг <keywords>, до 210 символов)')),
                ('meta_description', models.CharField(blank=True, max_length=210, verbose_name='Описание (тэг <description>, до 210 символов)')),
                ('post_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'verbose_name_plural': 'Посты',
                'verbose_name': 'Пост',
                'ordering': ['post_order'],
            },
        ),
        migrations.CreateModel(
            name='Top',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', ckeditor.fields.RichTextField(blank=True, verbose_name='Текст')),
                ('video', models.CharField(blank=True, max_length=14, verbose_name='Видео ID(youtube)')),
                ('image', models.ImageField(blank=True, upload_to='blog/block', verbose_name='Картинка')),
                ('top_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('post', adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Post')),
            ],
            options={
                'verbose_name_plural': 'Верхние блоки, которые над каруселью',
                'verbose_name': 'Верхний блок',
                'ordering': ['top_order'],
            },
        ),
        migrations.CreateModel(
            name='TopMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('top_image', models.ImageField(upload_to='blog/media', verbose_name='Картинка 1600 на 1060')),
                ('title', models.CharField(blank=True, max_length=49, verbose_name='Заголвок')),
                ('slogan', models.CharField(blank=True, max_length=140, verbose_name='Девиз')),
            ],
            options={
                'verbose_name_plural': 'Заставка для блога',
                'verbose_name': 'Заставка для блога',
            },
        ),
        migrations.AddField(
            model_name='carousel',
            name='post',
            field=adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Post'),
        ),
        migrations.AddField(
            model_name='bottom',
            name='post',
            field=adminsortable.fields.SortableForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Post'),
        ),
    ]
